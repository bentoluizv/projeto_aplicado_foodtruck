[project]
name = "projeto-aplicado"
version = "0.1.0"
description = ""
authors = [{ name = "bentoluizv", email = "bentoluizv@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13, <4.0"
dependencies = [
    "fastapi[standard] (>=0.115.9,<0.116.0)",
    "sqlmodel (>=0.0.22,<0.0.23)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "python-ulid (>=3.0.0,<4.0.0)",
    "redis[hiredis] (>=5.2.1,<6.0.0)",
    "supabase (>=2.15.0,<3.0.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "email-validator (>=2.2.0,<3.0.0)",

]

[tool.poetry.group.dev.dependencies]
ignr = "^2.2"
taskipy = "^1.14.1"
ruff = "^0.9.9"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"


[tool.ruff]
line-length = 79
exclude = ["app/database/migrations"]

[tool.ruff.lint]
preview = true
ignore = ['PLR6301']
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
dev = 'fastapi dev projeto_aplicado/app.py'
test = 'pytest -s -x --cov=projeto_aplicado'
run = 'fastapi run projeto_aplicado/app.py'
export = 'poetry export -f requirements.txt --output requirements.txt'

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
